var isOpenAt = false;

function setMention(target) {
    var headerTpl = '<div class="atwho-header">Kết quả tìm kiếm&nbsp;&nbsp;<small>&nbsp;↑&nbsp;↓ &nbsp;&nbsp; Enter để chọn &nbsp;&nbsp; Esc để thoát</small></div>';
    var displayTpl = '<li><img style="width:30px;height:30px;boder-radius:50%" src="${avatar}" alt="avatar" > ${fullName} <small>(${email})</small></li>';

    var insertTpl_email = '<mention_email id="${id}" empl_@ids#="${id}" username="${fullName}" email="${email}" phone="${phoneNumber}" @email#="${email}" @name#="${fullName}" @position#="${positionName}" @carer#="${organizationName}" @end#="1"><a href="#tag_vvt@">${fullName}</a></mention_email>';
    var insertTpl_sms = '<mention_sms id="${id}" username="${fullName}" email="${email}" phone="${phoneNumber}">${fullName}</mention_sms>';

    var at_config = {
        at: "@",
        searchKey: "filter",
        data: [],
        headerTpl: headerTpl,
        insertTpl: insertTpl_email,
        displayTpl: displayTpl,
        limit: 10,
        delay: 500,
        callbacks: {
            remoteFilter: function (query, callback) {
                if (query.length >= 0) {
                    $.getJSON("/ajaxQuery", {q: query}, function (data) {
                        callback(data);
                    });
                } else {
                    callback([]);
                }
            },
            matcher: function (flag, subtext, should_start_with_space) {
                var match, regexp;

                flag = flag.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");

                if (should_start_with_space) {
                    flag = '(?:^|\\s)' + flag;
                }

                regexp = new RegExp(flag + '([A-Za-z0-9_\\s\+\-\]*)$|' + flag + '([^\\x00-\\xff]*)$', 'gi');
                match = regexp.exec(subtext.replace(/\s/g, " "));
                if (match) {
                    return match[2] || match[1];
                } else {
                    return null;
                }
            }
        }
    };

    var at_config_sms = {
        at: "#",
        searchKey: "filter",
        data: [],
        headerTpl: headerTpl,
        insertTpl: insertTpl_sms,
        displayTpl: displayTpl,
        limit: 5,
        delay: 1000,
        callbacks: {
            remoteFilter: function (query, callback) {
                if (query.length > 0) {
                    $.getJSON("/ajaxSearchUser", {q: query}, function (data) {
                        callback(data.data);
                    });
                } else {
                    callback([]);
                }
            },
            matcher: function (flag, subtext, should_start_with_space) {
                var match, regexp;

                flag = flag.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");

                if (should_start_with_space) {
                    flag = '(?:^|\\s)' + flag;
                }

                regexp = new RegExp(flag + '([A-Za-z0-9_\\s\+\-\]*)$|' + flag + '([^\\x00-\\xff]*)$', 'gi');
                match = regexp.exec(subtext.replace(/\s/g, " "));
                if (match) {
                    return match[2] || match[1];
                } else {
                    return null;
                }
            }
        }
    };
    $(target).atwho(at_config).atwho(at_config_sms).on("shown.atwho", function (event, flag, query) {
        isOpenAt = true;
    }).on("hidden.atwho", function (event, flag, query) {
        setTimeout(function () {
            isOpenAt = false;
        }, 500);
    });
}